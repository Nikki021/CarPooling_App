-- USERS TABLE
CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(20) CHECK (role IN ('DRIVER', 'RIDER')) NOT NULL
);

-- DRIVER_TRIP TABLE
CREATE TABLE IF NOT EXISTS driver_trip (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    source_lat DOUBLE PRECISION NOT NULL,
    source_lng DOUBLE PRECISION NOT NULL,
    dest_lat DOUBLE PRECISION NOT NULL,
    dest_lng DOUBLE PRECISION NOT NULL,
    time TIMESTAMP NOT NULL,
    seats_available INTEGER NOT NULL CHECK (seats_available >= 0)
);

-- RIDE_REQUEST TABLE
CREATE TABLE IF NOT EXISTS ride_request (
    id SERIAL PRIMARY KEY,
    user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    source_lat DOUBLE PRECISION NOT NULL,
    source_lng DOUBLE PRECISION NOT NULL,
    dest_lat DOUBLE PRECISION NOT NULL,
    dest_lng DOUBLE PRECISION NOT NULL,
    time TIMESTAMP NOT NULL
);

-- MATCHES TABLE (Optional)
CREATE TABLE IF NOT EXISTS matches (
    id SERIAL PRIMARY KEY,
    driver_trip_id INTEGER NOT NULL REFERENCES driver_trip(id) ON DELETE CASCADE,
    ride_request_id INTEGER NOT NULL REFERENCES ride_request(id) ON DELETE CASCADE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);